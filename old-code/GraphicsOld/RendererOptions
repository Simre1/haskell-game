module Effect.Graphics.RendererOptions () where

import Import
import Effect.Graphics.Internal
--import Sigma
import qualified SDL
import SDL (BlendMode(..))

-- rendererDrawColour :: Renderer -> StateVar (AlphaColour Double)
-- rendererDrawColour r = mapStateVar alphaColourToV4 v4ToAlphaColour $ SDL.rendererDrawColor (unwrapRenderer r)
--   where alphaColourToV4 c = let (RGB r g b) = toSRGB24 (c `over` mempty)
--                             in SDL.V4 r g b (round $ 100 * alphaChannel c)
--         v4ToAlphaColour (SDL.V4 r g b a) = withOpacity (sRGB24 r g b) (fromIntegral $ a)

-- rendererDrawBlendMode :: Renderer -> StateVar (BlendMode)
-- rendererDrawBlendMode r = SDL.rendererDrawBlendMode (unwrapRenderer r)
